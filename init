#!/libexec/busybox ash

if /libexec/busybox test -e /run/.initialized; then
	exit
fi

/libexec/busybox reset

export USER=root PATH=/bin:/libexec:/run/bin
busybox rm -fr /bin /bbin
busybox mkdir -p /bin /bbin /proc /run /dev /sys

for cmd in $(busybox --list); do
	busybox ln -s /libexec/busybox /bin/$cmd
done

mount -t sysfs -o nodev,noexec,nosuid sysfs /sys
mount -t proc -o nodev,noexec,nosuid proc /proc
mount -t tmpfs -o nosuid,nodev,mode=0755 run /run
mount -t devtmpfs -o mode=0755,nosuid dev /dev

ln -s /proc/self/fd /dev/fd
mkdir -p /dev/pts /run/bin
mount -t devpts devpts /dev/pts

setfont -C /dev/tty0 /lib/font.gz

reset
clear

touch /run/.initialized

bootparam=$(cat /proc/cmdline | xargs -n 1 | grep -F boot= | cut -d = -f 2-)

dir=$(bootdev $bootparam || :)
cd
while true; do
	test -d "$dir" || break
	cd "$dir"
	opts="$(bootcfg || :)"
	test -n "$opts" || break

	read -s -n1 -t3 key || key=

	if test "$key" = "e"; then
		echo "$opts" >/run/opts
		vi /run/opts
		opts="$(cat /run/opts)"
	elif test "$key" = "x"; then
		break
	fi

	bootkernel $opts
done

setsid -c ash -i

cd /

sync

kill -TERM -1
kill -KILL -1


